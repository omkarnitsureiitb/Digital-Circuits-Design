library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity word_detection is
	port( inp:in std_logic_vector(4 downto 0);
	reset,clock:in std_logic;
	outp: out std_logic);
end word_detection;

architecture bhv of word_detection is
---------------Define state type here-----------------------------
type state is (rst,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11); -- Fill other states here
---------------Define signals of state type-----------------------
signal y_present,y_next: state:=rst;
begin
clock_proc:process(clock,reset)
begin
if(clock='1' and clock' event) then
if(reset = '1') then
y_present<= rst;
--Here Reset is synchronous
-- Fill the code here
else
y_present <= y_next;
end if;
end if;
end process;


state_transition_proc:process(inp,y_present)

begin

case y_present is
		when rst=>
		if(unsigned(inp)=18) then --r has been detected
			y_next<= s1-- Fill the code here
		else
			y_next <= rst;
		end if;
		
		when s1=>
		if(unsigned(inp)=21) then --r has been detected
			y_next<= s2-- Fill the code here
		else
			y_next <= s1;
		end if;
		
		when s2=>
		if(unsigned(inp)=14)then --r has been detected
			y_next<= s3-- Fill the code here
		else
			y_next <= s2;
		end if;
end case;


case y_present is
		when rst=>
		if(unsigned(inp)=2) then --r has been detected
			y_next<= s4-- Fill the code here
		else
			y_next <= rst;
		end if;
		
		when s4=>
		if(unsigned(inp)=18) then --r has been detected
			y_next<= s5-- Fill the code here
		else
			y_next <= s4;
		end if;
		
		when s5=>
		if(unsigned(inp)=15)then --r has been detected
			y_next<= s6-- Fill the code here
		else
			y_next <= s5;
		end if;
		
		when s6=>
		if(unsigned(inp)=15)then --r has been detected
			y_next<= s7-- Fill the code here
		else
			y_next <= s6;
		end if;
		
		when s7=>
		if(unsigned(inp)=13)then --r has been detected
			y_next<= s8-- Fill the code here
		else
			y_next <= s7;
		end if;
end case;


case y_present is
		when rst=>
		if(unsigned(inp)=3) then --r has been detected
			y_next<= s9-- Fill the code here
		else
			y_next <= rst;
		end if;
		
		when s9=>
		if(unsigned(inp)=18) then --r has been detected
			y_next<= s10-- Fill the code here
		else
			y_next <= s9;
		end if;
		
		when s10=>
		if(unsigned(inp)=25)then --r has been detected
			y_next<= s11-- Fill the code here
		else
			y_next <= s10;
		end if;
end case;
		-------------------------
		---------Fill rest of the code here---------
output_proc:process(y_present, inp) ------- output process after this which will give
-------the output based on the present state and input (Mealy machine)
begin
case y_present is
	when rst=>
		outp<='0';
	when s1=>
		outp<='0';
	when s2=>
		outp<='0';
	when s3=>
		outp<='1';
	when s4=>
		outp<='0';
	when s5=>
		outp<='0';
	when s6=>
		outp<='0';
	when s7=>
		outp<='0';
	when s8=>
		outp<='1';
	when s9=>
		outp<='0';
	when s10=>
		outp<='0';
	when s11=>
		outp<='1';
end case;
end output_proc;
end bhv;